1.switch Sentence usage

class Loop{
	public static void main(String args[]){
		int c = '0' ; 
                int num = 10 ; 
                
		switch(c) { 
			case 'B' : 
				num ++ ; 
				System.out.println("相同");
				break;
			
			case 'A' : 
				num ++ ; 
				System.out.println("相同");
				break;
			
			case 'Y' : 
				num ++ ;
				System.out.println("相同");
				break;
			
			case '0':
				num ++ ;
				break ; 
                        default : 
				num -- ; 
                } 
                System.out.println(num) ;  
	}
}
-------------------------------------------------
2.Array selection sorting

class Selection{
	public static void main(String args[]){
		int[] num = new int[]{5,4,3,2,1};	
		
		for(int x = 0;x<num.length;x++){
			int i = x;
			for(int y = x+1;y<num.length-x;y++){
				if(num[i]>num[y]){
					i = y;	
				}
			}
			if(x!=i){
				int temp = num[i];	
				num[i] = num[x];
				num[x] = temp;	
				
			}
			System.out.print(num[x]);	
		}
	}
}
-------------------------------------------------
3.get() and set() usage

class Method{
	class Person{
		public Person(String n,int m){
			setName(n);
			setAge(m);
		}
		
		private String name;
		private int age;
		
		public void setName(String n){
		 name = n;
		}
		
		public void setAge(int m){
		age = m;
		}
		
		public String getName(){
			return name;
		}
        
		public int getAge(){
			return age;
		}
	}
	
	public static void main(String args[]){
		Method. Person p = new Method().new Person("kts",0);
		System.out.println("姓名："+p.getName()+"年龄："+p.getAge());
	}
}

get() and set() Static state

class Person{
	private String name;
	private int age;
	private static String country = "中国";
	public  Person(String name,int age){
		this.name = name;
		this.age = age;
	}	
	
	public static void setCountry(String country){	//静态变量方法保存在静态数据区
		Person.country = country;		//this表示的当前对象就不存在
	}
	public	static String getCountry(){
		return country;	//不加类名也能实现
	}
	
	public  String getInfo(){
		return "姓名："+this.name+"，年龄："+this.age+"，国家："+this.country;
	}
}
public class Z{
	public static void main(String args[]){
		Person p1 = new Person("康泰松",18);
		Person.setCountry("中华民国");	
		System.out.println(p1.getCountry());
	}
}

-------------------------------------------------
4.Array inversion

class Reversal{
    public static void main(String args[]){
        int[] data = new int[] {1,2,3,4,5,6,7,8,9};
        data = reverse(data);
        printArray(data);
    }

    public static int[] reverse(int[] arr){
        int center = arr.length/2;
	int tail = arr.length-1;
        int head = 0;
        
	for(int x =0; x<center;x++){
                int temp = arr[head];
		arr[head] = arr[tail];
		arr[head] = temp;
		head++;
                tail--;
        }
        return arr;
    }

    public static void printArray(int[] temp){
        for(int z= 0;z<temp.length;z++){
            System.out.print(temp[z]+"、");
        }
    }
}

Two dimensional array inversion
class Reversal{
	public static void main(String args[]){
		int[][] data = new int[][]{{1,2,3},{4,5,6},{7,8,9}};
		data = reverse(data);
		printArray(data);
	}

	public static int[][] reverse(int[][] arr){
		for(int x = 0;x<arr.length;x++){
			for(int y = x;y<arr[x].length;y++){
				if(x!=y){
					int temp = arr[x][y];	
					arr[x][y] = arr[y][x];
					arr[y][x] = temp;
				}
			}
		}
		return arr;
	}

	public static void printArray(int[][] pa){
		for(int z = 0;z<pa.length;z++){
			for(int u = 0;u<pa[z].length;u++){
				System.out.print(pa[z][u]+"、");
			}
			System.out.print("\n");
		}
	}
}
-------------------------------------------------
5.Array dichotomy
 
 class Javatest{
    public static void main(String args[]){
		int[] arr = new int[]{1,3,5,7,9};
		int from = 0;
		int to = arr.length;
		int temp = 7;

		System.out.print(binarySearch(arr,from,to,temp));
	}

	public static int binarySearch(int arr[],int from,int to,int key){
		int mid = (from+to)/2;
		
		if(mid == key){
			return mid;
		}else if(key<arr[mid]){
			return binarySearch(arr,from,mid-1,key);
		}else if(key>arr[mid]){
			return binarySearch(arr,mid+1,to,key);
		}else{
			return -1;
		}
	}
}
-------------------------------------------------
6.Object comparison

class Comparison{
	public static void main(String args[]){
		Person perA = new Conparison().new Person("康泰松",27);
		Person perB = new Conparison().new Person("康泰松",27);
		
		if(perA.compare(perB)){
			System.out.println("相同");
		}else{
			System.out.print("不相同");
			}
	}
	
	class Person{
		public Person(String name,int age){
			setName(name);
			setAge(age);
		}
		public boolean compare(Person per){
			if(this == per){
				return true;
			}else if(this.name.equals(per.name)&&this.age==per.age){
					return true;
				 }
				return false;
		}
		
		private String name;
		private int	age;

		public void setName(String name){
			this.name = name;
		}
		public String getName(){
			return	name;
		}

		public void  setAge(int age){
			this.age = age;
		}
		public int getAge(){
			return	age;
		}
	}
}
-------------------------------------------------
7.Data table and Java

class  Emp{
	private int empno;
	private String ename;
	private String job;
	private double sal;
	private double comm;
	private Emp mgr;		
	private Dept dept;	
	
	public  Emp(){}
	public Emp(int empno,String ename,String job,double sal,double comm){
		this.empno = empno;
		this.ename = ename;
		this.job = job;
		this.sal = sal;
		this.comm = comm;
	}
	public void setMgr(Emp mgr){
		this.mgr = mgr;
	}
	public Emp getMgr(){
		return this.mgr;
	}
	public void setDept(Dept dept){
		this.dept = dept;
	}
	public Dept getDept(){
		return this.dept;
	}
	public	String getInfo(){
		return "【EMP】empno = "+this.empno+"，ename = "+this.ename+"，job = "+this.job+"，sal = "+this.sal+"，comm = "+this.comm;
	}
	
}

class Dept{								
	private int deptno;
	private String dname;
	private String loc;
	private Emp[] emps;		
	public Dept(){}
	public Dept(int deptno,String dname,String loc){
		this.deptno = deptno;
		this.dname = dname;
		this.loc = loc;
	}
	public void setEmps(Emp[] emps){
		this.emps = emps;
	}
	public Emp[] getEmps(){
		return this.emps;
	}
	public	String getInfo(){
		return "【DEPT】deptno = "+this.deptno+"，dname = "+this.dname+"，loc = "+this.loc;
	}
} 

public class TestDemo{
	public static void main(String args[]){
		Dept dept = new Dept(10,"ACCOUNTING","NEW YORK");
		Emp ea = new Emp(7369,"SMITH","CLERK",800.0,0.0);
		Emp eb = new Emp(7566,"ALLEN","MANAGER",2450.0,0.0);
		Emp ec = new Emp(7839,"KING","PRESIDENT",5000.0,0.0);
		
		ea.setMgr(eb);
		eb.setMgr(ec);

		ea.setDept(dept);
		eb.setDept(dept);
		ec.setDept(dept);

		dept.setEmps(new Emp[] {ea,eb,ec});

		System.out.println(dept.getInfo());
	}
}


class	Student{
	private int stuid;
	private String name;
	private int age;

	private StudentCourse[] studentCourses;
	public Student(){}
	public Student(int stuid,String name,int age){
		this.stuid = stuid;
		this.name = name;
		this.age = age;
	}
	public void setStudentCourses(StudentCourse[] studentCourses){
		this.studentCourses = studentCourses;
	}
	public StudentCourse[] getStudentCourses(){
		return this.studentCourses;
	}

	public String getInfo(){
		return "【STUDENT】学生编号："+this.stuid+"，姓名："+this.name+"，年龄："+this.age;
	}
}
class	Course{
	private int cid;
	private String name;
	private int credit;
	private StudentCourse[] studentCourses;	// 没个数组元素包含学生的信息，学的课程，分数
	
	public	Course(){}
	public Course(int cid,String name,int credit){
		this.cid = cid;
		this.name = name;
		this.credit = credit;
	}
	public void setStudentCourses(StudentCourse[] studentCourses){
		this.studentCourses = studentCourses;
	}
	public StudentCourse[] getStudentCourses(){
		return this.studentCourses;
	}

	public String getInfo(){
		return "编号："+this.cid;
	}
}  

class	StudentCourse{	//学生选课
	private Student student;
	private Course course;
	private double score;
	public StudentCourse(){}
	public StudentCourse(Student student,Course course,double score){
		this.student = student;
		this.course = course;
		this.score = score;
	}
	public Student getStudent(){
		return this.student;
	}
	public Course getCourse(){
		return this.course;
	}
	public double getScore(){
		return this.score;
	}
}
public class TestDemo{
	public static void main(String args[]){
		Student stu1 = new Student(01,"张三",18);
		Student stu2 = new Student(02,"李四",18);
		Student stu3 = new Student(03,"王五",18);
		Course ca = new Course(1001,"马克思",3);
		Course cb = new Course(1002,"操作",2);

		stu1.setStudentCourses(new StudentCourse[]{
			new StudentCourse(stu1,ca,99.9),
			new StudentCourse(stu1,cb,87.0)	}
			);
		stu2.setStudentCourses(new StudentCourse[]{
			new StudentCourse(stu2,ca,78.0)}
			);
		stu3.setStudentCourses(new StudentCourse[]{
			new StudentCourse(stu3,cb,98.0)}
			);
		ca.setStudentCourses(new StudentCourse[]{
			new StudentCourse(stu1,ca,99.9),
			new StudentCourse(stu2,ca,87.0)}
			);
		cb.setStudentCourses(new StudentCourse[]{
			new StudentCourse(stu1,cb,87.9),
			new StudentCourse(stu3,cb,98.0)}
			);
			for(int x = 0;x<ca.getStudentCourses().length;x++){
				System.out.print(ca.getStudentCourses()[x].getStudent().getInfo());
				System.out.print("，成绩："+ca.getStudentCourses()[x].getScore());	
				System.out.println();
			}
	}
}
-------------------------------------------------
8.Data table permissions

class	Dept{		//部门信息
	private int did;
	private String dname;
	private Emp[] emps;		//多个雇员
	private Role role;		//一个角色
	public Dept(int did,String dname){
		this.did = did;
		this.dname = dname;
	}
	public void setEmps(Emp[] emps){
		this.dname = dname;
	}
	public Emp[] getEmps(){
		return this.emps;
	}
	public void setRole(Role role){
		this.role = role;
	}
	public Role getRole(){
		return this.role;
	}
	public String getInfo(){
		return	"【部门】did = "+this.did+"，名称 = "+this.dname;
	}
}

class	Emp{	//雇员信息
	private int eid;
	private String ename;
	private Dept dept;	//部门
	public Emp(int eid,String ename){
		this.eid = eid;
		this.ename = ename;
	}
	public void setDept(Dept dept){
		this.dept = dept;
	}
	public Dept getDept(){
		return this.dept;
	}
	public String getInfo(){
		return "【雇员】eid = "+this.eid+"，名称 = "+this.ename;
	}
}

class	Role{	//角色信息
	private int rid;
	private String title;
	private Dept[] depts;	//多个部门
	private Action[] actions;		//多个权限
	public Role(int rid,String title){
		this.rid = rid;
		this.title = title;
	}
	public void setDepts(Dept[] depts){
		this.depts = depts;
	}
	public Dept[] getDepts(){
		return this.depts;
	}
	public void setActions(Action[] actions){
		this.actions = actions;
	}
	public Action[] getActions(){
		return this.actions;
	}
	public String getInfo(){
		return "【角色】rid = "+this.rid+"，title = "+this.title;
	}
}

class	Action{	//权限
	private int aid;
	private String title;
	private String flag;
	private Role[] roles;
	public Action(int aid,String title,String flag){
		this.aid = aid;
		this.title = title;
		this.flag = flag;
	}
	public void setRoles(Role[] roles){
		this.roles = roles;
	}
	public Role[] getRoles(){
		return this.roles;
	}
	public String getInfo(){
		return "【权限】aid = "+this.aid+"，title = "+this.title+"，flag = "+this.flag;
	}
}

public class TestDemo{
	public static void main(String args[]){
		Dept d10 = new Dept(10,"财务部");
		Dept d20 = new Dept(20,"市场部");

		Emp e7360 = new Emp(7369,"SMITH");
		Emp e7566 = new Emp(7566,"AlLen");
		Emp e7902 = new Emp(7902,"FORD");
		Emp e7839 = new Emp(7839,"KING");
		Emp e7788 = new Emp(7788,"SCOTT");

		Role r100 = new Role(100,"管理层");
		Role r200 = new Role(200,"管理层");

		Action a1000 = new Action(1000,"雇员入职","emp:add");
		Action a2000 = new Action(2000,"雇员晋升","emp:edit");
		Action a3000 = new Action(3000,"发布公告","news:add:");
		Action a6000 = new Action(6000,"查看客户信息","customer:list");
		Action a7000 = new Action(7000,"回访记录","customer:add");
		//设置角色和权限的关系
		r100.setActions(new Action[]{a1000,a2000,a3000});
		r200.setActions(new Action[]{a6000,a7000});
		//设置权限和角色的关系
		a1000.setRoles(new Role[]{r100});
		a2000.setRoles(new Role[]{r200});
		a3000.setRoles(new Role[]{r100});
		a6000.setRoles(new Role[]{r200});
		a7000.setRoles(new Role[]{r200});
		//设置部门和角色的关系
		d10.setRole(r100);
		d20.setRole(r200);
		//角色和部门的关系
		r100.setDepts(new Dept[]{d10});
		r200.setDepts(new Dept[]{d20});
		//部门和雇员
		d10.setEmps(new Emp[]{e7360,e7566,e7902});
		d20.setEmps(new Emp[]{e7839,e7788});
		//雇员和部门
		e7360.setDept(d10);
		e7566.setDept(d10);
		e7902.setDept(d10);
		e7839.setDept(d20);
		e7788.setDept(d20);

		System.out.print(e7360.getInfo()+"，"+e7360.getDept().getInfo()+"\n");	//该员工对应的部门
		System.out.print(e7360.getDept().getRole().getInfo()+"\n");	//部门对应角色
		for(int x = 0;x<e7360.getDept().getRole().getActions().length;x++){
			System.out.println(e7360.getDept().getRole().getActions()[x].getInfo());
		}
	}
}
-----------------------------------------------------------------------------------------
9.Dynamic array

class Array{
	private int[] data;
	private int foot = 0;
	public Array(int len){	//初始化数组
		if(len>0){
			data = new int [len];
		}else{
			data = new int [1];
		}
	}

	public void inc(int num){	//扩充数组
		int[] z = data;
		data = new int [data.length+num];
		for(int x = 0;x<z.length;x++){
			data[x] = z[x];
		}
	}
	
	public boolean add(int num){	//在规定范围内赋值
		if(foot<data.length){
			data[foot++] = num;
			return true;
		}
		return false;
	}
	public int[] getArray(){
		return data;
	}
}
class Javatest{
    public static void main(String args[]){
		Array ay = new Array(5);
		System.out.print(ay.add(1)+" ");
		System.out.print(ay.add(1)+" ");
		System.out.print(ay.add(1)+" ");
		System.out.print(ay.add(1)+" ");
		System.out.println(ay.add(1)+" ");
	
		for(int x = 0;x<ay.getArray().length;x++){
			System.out.print(ay.getArray()[x]+" ");
		}
		ay.inc(2);
		System.out.print(ay.add(2)+" ");
		System.out.print(ay.add(2)+" ");
		
		for(int x = 0;x<ay.getArray().length;x++){
			System.out.print(ay.getArray()[x]+" ");
		}
	}
}	

